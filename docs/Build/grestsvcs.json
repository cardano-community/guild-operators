{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Cardano Queries API 1.0",
    "description": "Elastic RESTful query layer for exploring Cardano blockchain"
  },
  "host": "cardanoqueries.ga:8453",
  "consumes": [
    "application/json",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "produces": [
    "application/json",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "paths": {
    "/rpc/totals": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the circulating utxo, treasury, rewards, supply and reserves in lovelace for specified epoch, all epochs if empty",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_delegator_count": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get live delegator count",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_updates": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Grab latest, active or all pool updates for specified pool",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_state": {
                  "format": "text",
                  "type": "string"
                },
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                },
                "_current_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_retire": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Check if a pool retire transaction has been sent",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_blocks_in_epoch": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Return information about blocks minted by a given pool in current epoch (or _epoch_no if provided)",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_epoch_no": {
                  "format": "uinteger",
                  "type": "string"
                },
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_relays": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get registered pool relays",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ]
      }
    },
    "/rpc/pool_active_stake": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get the pools active stake in lovelace for specified epoch, current epoch if empty",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                },
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_opcert": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get pools registered operational certificate and counter (from last block made)",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_owners": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get registered pool owners",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_metadata": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get pool metadata url, hash, and contents",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/account_balance": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the account balance of an address",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_address"
              ],
              "type": "object",
              "properties": {
                "_address": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/rewards_history": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the full rewards history in lovelace for a stake address, or certain epoch reward if specified",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_stake_address_bech32"
              ],
              "type": "object",
              "properties": {
                "_stake_address_bech32": {
                  "format": "text",
                  "type": "string"
                },
                "_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/mir_history": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the full MIR (Move Instantaneous Rewards) history in lovelace for a stake address, or certain epoch if specified",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_stake_address_bech32"
              ],
              "type": "object",
              "properties": {
                "_stake_address_bech32": {
                  "format": "text",
                  "type": "string"
                },
                "_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/tip": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the tip info about the latest block seen by chain",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/blocks": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get detailed information about all blocks (paginated - latest first)",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/account_assets": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the native asset balance of an account",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_address_bech32"
              ],
              "type": "object",
              "properties": {
                "_address_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/epoch_info_cache": {
      "get": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get detailed info for epoch including protocol parameters",
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.epoch_info_cache.epoch"
          }
        ],
        "responses": {
          "206": {
            "description": "Partial Content"
          },
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/epoch_info_cache"
              },
              "type": "array"
            },
            "description": "OK"
          }
        }
      }
    },
  },
  "definitions": {
    "epoch_info_cache": {
      "description": "Get detailed info for epoch including protocol parameters",
      "required": [
        "epoch",
        "i_out_sum",
        "i_fees",
        "i_tx_count",
        "i_blk_count",
        "i_first_block_time",
        "i_last_block_time",
        "p_min_fee_a",
        "p_min_fee_b",
        "p_max_block_size",
        "p_max_tx_size",
        "p_max_bh_size",
        "p_key_deposit",
        "p_pool_deposit",
        "p_max_epoch",
        "p_optimal_pool_count",
        "p_influence",
        "p_monetary_expand_rate",
        "p_treasury_growth_rate",
        "p_decentralisation",
        "p_protocol_major",
        "p_protocol_minor",
        "p_min_utxo_value",
        "p_min_pool_cost",
        "p_block_id"
      ],
      "properties": {
        "epoch": {
          "format": "integer",
          "type": "integer",
          "description": "Note:\nThis is a Primary Key.<pk/>"
        },
        "i_out_sum": {
          "format": "numeric",
          "type": "number"
        },
        "i_fees": {
          "format": "numeric",
          "type": "number"
        },
        "i_tx_count": {
          "format": "integer",
          "type": "integer"
        },
        "i_blk_count": {
          "format": "integer",
          "type": "integer"
        },
        "i_first_block_time": {
          "format": "timestamp without time zone",
          "type": "string"
        },
        "i_last_block_time": {
          "format": "timestamp without time zone",
          "type": "string"
        },
        "i_active_stake": {
          "format": "numeric",
          "type": "number"
        },
        "p_min_fee_a": {
          "format": "integer",
          "type": "integer"
        },
        "p_min_fee_b": {
          "format": "integer",
          "type": "integer"
        },
        "p_max_block_size": {
          "format": "integer",
          "type": "integer"
        },
        "p_max_tx_size": {
          "format": "integer",
          "type": "integer"
        },
        "p_max_bh_size": {
          "format": "integer",
          "type": "integer"
        },
        "p_key_deposit": {
          "format": "numeric",
          "type": "number"
        },
        "p_pool_deposit": {
          "format": "numeric",
          "type": "number"
        },
        "p_max_epoch": {
          "format": "integer",
          "type": "integer"
        },
        "p_optimal_pool_count": {
          "format": "integer",
          "type": "integer"
        },
        "p_influence": {
          "format": "double precision",
          "type": "number"
        },
        "p_monetary_expand_rate": {
          "format": "double precision",
          "type": "number"
        },
        "p_treasury_growth_rate": {
          "format": "double precision",
          "type": "number"
        },
        "p_decentralisation": {
          "format": "double precision",
          "type": "number"
        },
        "p_entropy": {
          "format": "text",
          "type": "string"
        },
        "p_protocol_major": {
          "format": "integer",
          "type": "integer"
        },
        "p_protocol_minor": {
          "format": "integer",
          "type": "integer"
        },
        "p_min_utxo_value": {
          "format": "numeric",
          "type": "number"
        },
        "p_min_pool_cost": {
          "format": "numeric",
          "type": "number"
        },
        "p_nonce": {
          "format": "text",
          "type": "string"
        },
        "p_block_id": {
          "format": "bigint",
          "type": "integer"
        },
        "p_cost_models": {
          "format": "character varying",
          "type": "string"
        },
        "p_price_mem": {
          "format": "double precision",
          "type": "number"
        },
        "p_price_step": {
          "format": "double precision",
          "type": "number"
        },
        "p_max_tx_ex_mem": {
          "format": "numeric",
          "type": "number"
        },
        "p_max_tx_ex_steps": {
          "format": "numeric",
          "type": "number"
        },
        "p_max_block_ex_mem": {
          "format": "numeric",
          "type": "number"
        },
        "p_max_block_ex_steps": {
          "format": "numeric",
          "type": "number"
        },
        "p_max_val_size": {
          "format": "numeric",
          "type": "number"
        },
        "p_collateral_percent": {
          "format": "integer",
          "type": "integer"
        },
        "p_max_collateral_inputs": {
          "format": "integer",
          "type": "integer"
        },
        "p_coins_per_utxo_word": {
          "format": "numeric",
          "type": "number"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "select": {
      "name": "select",
      "description": "Filtering Columns",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "on_conflict": {
      "name": "on_conflict",
      "description": "On Conflict",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "order": {
      "name": "order",
      "description": "Ordering",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "range": {
      "name": "Range",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "rangeUnit": {
      "name": "Range-Unit",
      "description": "Limiting and Pagination",
      "required": false,
      "default": "items",
      "in": "header",
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "limit": {
      "name": "limit",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.epoch_info_cache": {
      "name": "epoch_info_cache",
      "required": false,
      "schema": {
        "$ref": "#/definitions/epoch_info_cache"
      },
      "in": "body"
    },
    "rowFilter.epoch_info_cache.epoch": {
      "name": "epoch",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    }
  }
}
