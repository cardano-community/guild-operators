{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Cardano Queries API 1.0",
    "description": "Elastic RESTful query layer for exploring Cardano blockchain"
  },
  "host": "cardanoqueries.ga:8453",
  "consumes": [
    "application/json",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "produces": [
    "application/json",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "paths": {
    "/rpc/totals": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the circulating utxo, treasury, rewards, supply and reserves in lovelace for specified epoch, all epochs if empty",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_delegator_count": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get live delegator count",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_updates": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Grab latest, active or all pool updates for specified pool",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_state": {
                  "format": "text",
                  "type": "string"
                },
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                },
                "_current_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_retire": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Check if a pool retire transaction has been sent",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_relays": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get registered pool relays",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_active_stake": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get the pools active stake in lovelace for specified epoch, current epoch if empty",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                },
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_opcert": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get pools registered opcert and counter (from last block made)",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_owners": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get registered pool owners",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/pool_metadata": {
      "post": {
        "tags": [
          "Pool Queries"
        ],
        "summary": "Get pool metadata url and hash",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_pool_bech32"
              ],
              "type": "object",
              "properties": {
                "_pool_bech32": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/account_balance": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the account balance of an address",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_address"
              ],
              "type": "object",
              "properties": {
                "_address": {
                  "format": "text",
                  "type": "string"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/rewards_history": {
      "post": {
        "tags": [
          "Blockchain Queries"
        ],
        "summary": "Get the full rewards history in lovelace for a stake address, or certain epoch reward if specified",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "required": [
                "_stake_address_bech32"
              ],
              "type": "object",
              "properties": {
                "_stake_address_bech32": {
                  "format": "text",
                  "type": "string"
                },
                "_epoch_no": {
                  "format": "numeric",
                  "type": "number"
                }
              }
            },
            "in": "body",
            "name": "args"
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "parameters": {
    "preferParams": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "in": "header",
      "type": "string",
      "enum": [
        "params=single-object"
      ]
    },
    "preferReturn": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "in": "header",
      "type": "string",
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none"
      ]
    },
    "preferCount": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "in": "header",
      "type": "string",
      "enum": [
        "count=none"
      ]
    },
    "select": {
      "name": "select",
      "description": "Filtering Columns",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "on_conflict": {
      "name": "on_conflict",
      "description": "On Conflict",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "order": {
      "name": "order",
      "description": "Ordering",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "range": {
      "name": "Range",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "rangeUnit": {
      "name": "Range-Unit",
      "description": "Limiting and Pagination",
      "required": false,
      "default": "items",
      "in": "header",
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "limit": {
      "name": "limit",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    }
  }
}
