name: Get latest Mithril release version
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'
jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_SCOPED_TOKEN }}
          fetch-depth: 0
          ref: alpha
      - name: Fetch Mithril release version
        run: |
          curl -sL https://api.github.com/repos/input-output-hk/mithril/releases/latest | jq -r '.tag_name' > files/docker/node/release-versions/mithril-latest.txt
      - name: Assigns release version
        run: |
          VERSION=$(cat ./files/docker/node/release-versions/mithril-latest.txt)
      - name: Source mithril.library and check upgrade safety
        run: |
          set -e
          . scripts/cnode-helper-scripts/mithril.library workflow
          check_mithril_upgrade_safe
          echo "MITHRIL_UPGRADE_SAFE=$MITHRIL_UPGRADE_SAFE" >> $GITHUB_ENV
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true' && env.MITHRIL_UPGRADE_SAFE == 'Y'
        run: |
          git config --global user.name ${{ secrets.REPO_SCOPED_USER }}
          git config --global user.email ${{ secrets.REPO_SCOPED_EMAIL }}
          git commit -am "New mithril release version ${VERSION}"
          git push