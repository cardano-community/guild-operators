#!/bin/bash
# shellcheck disable=SC2086

[[ -z "$CNODE_HOME" ]] && CNODE_HOME="/opt/cardano/cnode"

. "${CNODE_HOME}"/scripts/env

if [[ -S "$CNODE_HOME/sockets/node0.socket" ]]; then
  if [ `ps -ef | grep -c [c]ardano-node.*.$CNODE_HOME/sockets/node0.socket` -gt 0 ]; then
     echo "ERROR: A Cardano node is already running, please terminate this node before starting a new one with this script."
     exit 1
  else
    echo "WARN: A prior running Cardano node was not cleanly shutdown, socket file still exists. Cleaning up."
    unlink $CNODE_HOME/sockets/node0.socket
  fi
fi

[[ ! -d "$CNODE_HOME/logs/archive" ]] && mkdir -p "$CNODE_HOME/logs/archive"

[[ $(find "$CNODE_HOME"/logs/*.json 2>/dev/null | wc -l) -gt 0 ]] && mv $CNODE_HOME/logs/*.json $CNODE_HOME/logs/archive/

## Static (content that will not be overwritten by prereqs.sh)
## Begin

POOL_NAME="TEST"
CNODE_PORT=6000
POOL_DIR="$CNODE_HOME/priv/pool/$POOL_NAME"

if [[ -f "$POOL_DIR/op.cert" && -f "$POOL_DIR/vrf.skey" && -f "$POOL_DIR/hot.skey" ]]; then
  cardano-node run \
	--topology $CNODE_HOME/files/topology.json \
	--config $CNODE_HOME/files/config.json \
	--database-path $CNODE_HOME/db \
	--socket-path $CNODE_HOME/sockets/node0.socket \
	--host-addr 0.0.0.0 \
        --shelley-kes-key $POOL_DIR/hot.skey \
        --shelley-vrf-key $POOL_DIR/vrf.skey \
        --shelley-operational-certificate $POOL_DIR/op.cert \
	--port $CNODE_PORT
else
  cardano-node run \
        --topology $CNODE_HOME/files/topology.json \
        --config $CNODE_HOME/files/config.json \
        --database-path $CNODE_HOME/db \
        --socket-path $CNODE_HOME/sockets/node0.socket \
        --host-addr 0.0.0.0 \
        --port $CNODE_PORT
fi

## End
