version: "3.5"

services:
  postgres:
    image: postgres:11.5-alpine
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 8059:8059
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - ./guildsetup/scripts/getmetricsDS.sh:/getmetricsDS.sh
      - ./guildsetup/scripts/grest-api.sh:/grest-api.sh
      - ./guildsetup/cfg/postgresql.conf:/etc/postgresql.conf
      - ./guildsetup/init-queries:/docker-entrypoint-initdb.d/
      - ./guildsetup/scripts/docker-entrypoint.sh:/docker-entrypoint.sh
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-node:
    image: cardanocommunity/cardano-node:latest
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - SOCKET=/opt/cardano/cnode/sockets/node.socket
      - EKG=Y 
    volumes:
      - node-db:/opt/cardano/cnode/db
      - node-ipc:/opt/cardano/cnode/sockets
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-db-sync:
    image: inputoutput/cardano-db-sync:alonzo-purple-1.0
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - cardano-node
      - postgres
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - db-sync-data:/var/lib/cdbsync
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    
  haproxy:
    image: haproxy:alpine
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - cardano-node
      - cardano-db-sync
      - postgres
      - postgrest
    volumes:
      - ./guildsetup/cfg/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "8053:8053"
    restart: on-failure

  postgrest:
    image: postgrest/postgrest
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - PGRST_DB_URI=postgres://guild:HelloWorld54321@postgres/cexplorer
      - PGRST_DB_SCHEMA="grest,public"
      - PGRST_DB_ANON_ROLE="web_anon"
      - PGRST_DB-EXTRA-SEARCH-PATH="public"
      - PGRST_MAX-ROWS=1000
      - PGRST_SERVER_HOST=0.0.0.0
      - PGRST_SERVER_PORT=8050
    depends_on:
      - postgres
    restart: on-failure

secrets:
  postgres_db:
    file: ./config/secrets/postgres_db
  postgres_password:
    file: ./config/secrets/postgres_password
  postgres_user:
    file: ./config/secrets/postgres_user

volumes:
  node-db:
  postgres_db:
  db-sync-data:
  node-ipc:
